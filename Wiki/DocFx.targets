<Project>
  <PropertyGroup>
    <DocFxExePath Condition=" '$(OS)' == 'Windows_NT' ">
      $(UserProfile)\.dotnet\tools\docfx.exe
    </DocFxExePath>
    <DocFxExePath Condition=" '$(OS)' != 'Windows_NT' ">
      $(HOME)/.dotnet/tools/docfx
    </DocFxExePath>
    <DocFxRoot>$(MSBuildThisFileDirectory)</DocFxRoot>
  </PropertyGroup>

  <Target Name="RunDocFx"
          AfterTargets="Build">
    <!-- Kill previous server -->
    <Exec
      WorkingDirectory="$(DocFxRoot)"
      Condition=" '$(OS)' == 'Windows_NT' "
      Command="taskkill /F /IM docfx.exe"
      ContinueOnError="true" />
    <Exec
      WorkingDirectory="$(DocFxRoot)"
      Condition=" '$(OS)' != 'Windows_NT' "
      Command="pkill -f &quot;docfx serve _site -p 8256&quot;"
      ContinueOnError="true" />

    <!-- Install docfx if needed -->
    <Exec
      WorkingDirectory="$(DocFxRoot)"
      Condition="!Exists('$(DocFxExePath)')"
      Command="dotnet tool install -g docfx" />

    <!-- Background server -->
	  <Exec
		WorkingDirectory="$(DocFxRoot)"
		Condition=" '$(OS)' == 'Windows_NT' "
		Command="powershell -NoProfile -Command Start-Process powershell -ArgumentList '-Command','docfx metadata; if ($LastExitCode -ne 0) { exit $LastExitCode }; docfx build; if ($LastExitCode -ne 0) { exit $LastExitCode }; docfx serve _site -p 8256 --open-browser --open-file api/Ubytec.Language.html'" />
	  <Exec
		WorkingDirectory="$(DocFxRoot)"
		Condition=" '$(OS)' != 'Windows_NT' "
		Command="bash -c 'docfx metadata &amp;&amp; docfx build &amp;&amp; docfx serve _site -p 8256 --open-browser --open-file api/Ubytec.Language.html; exec bash'" />
  </Target>
</Project>
