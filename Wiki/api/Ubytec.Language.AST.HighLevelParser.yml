### YamlMime:ManagedReference
items:
- uid: Ubytec.Language.AST.HighLevelParser
  commentId: T:Ubytec.Language.AST.HighLevelParser
  id: HighLevelParser
  parent: Ubytec.Language.AST
  children:
  - Ubytec.Language.AST.HighLevelParser.ParseModule(Ubytec.Language.Syntax.Model.SyntaxToken[])
  - Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors(Ubytec.Language.Syntax.Model.SyntaxToken[])
  langs:
  - csharp
  - vb
  name: HighLevelParser
  nameWithType: HighLevelParser
  fullName: Ubytec.Language.AST.HighLevelParser
  type: Class
  source:
    remote:
      path: Ubytec/Language/AST/HighLevelParser.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: HighLevelParser
    path: ../Ubytec/Language/AST/HighLevelParser.cs
    startLine: 8
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.AST
  syntax:
    content: public static class HighLevelParser
    content.vb: Public Module HighLevelParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubytec.Language.AST.HighLevelParser.ParseModule(Ubytec.Language.Syntax.Model.SyntaxToken[])
  commentId: M:Ubytec.Language.AST.HighLevelParser.ParseModule(Ubytec.Language.Syntax.Model.SyntaxToken[])
  id: ParseModule(Ubytec.Language.Syntax.Model.SyntaxToken[])
  parent: Ubytec.Language.AST.HighLevelParser
  langs:
  - csharp
  - vb
  name: ParseModule(SyntaxToken[])
  nameWithType: HighLevelParser.ParseModule(SyntaxToken[])
  fullName: Ubytec.Language.AST.HighLevelParser.ParseModule(Ubytec.Language.Syntax.Model.SyntaxToken[])
  type: Method
  source:
    remote:
      path: Ubytec/Language/AST/HighLevelParser.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: ParseModule
    path: ../Ubytec/Language/AST/HighLevelParser.cs
    startLine: 15
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.AST
  syntax:
    content: public static Module ParseModule(SyntaxToken[] tokens)
    parameters:
    - id: tokens
      type: Ubytec.Language.Syntax.Model.SyntaxToken[]
    return:
      type: Ubytec.Language.HighLevel.Module
    content.vb: Public Shared Function ParseModule(tokens As SyntaxToken()) As [Module]
  overload: Ubytec.Language.AST.HighLevelParser.ParseModule*
  nameWithType.vb: HighLevelParser.ParseModule(SyntaxToken())
  fullName.vb: Ubytec.Language.AST.HighLevelParser.ParseModule(Ubytec.Language.Syntax.Model.SyntaxToken())
  name.vb: ParseModule(SyntaxToken())
- uid: Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors(Ubytec.Language.Syntax.Model.SyntaxToken[])
  commentId: M:Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors(Ubytec.Language.Syntax.Model.SyntaxToken[])
  id: ParseModuleWithErrors(Ubytec.Language.Syntax.Model.SyntaxToken[])
  parent: Ubytec.Language.AST.HighLevelParser
  langs:
  - csharp
  - vb
  name: ParseModuleWithErrors(SyntaxToken[])
  nameWithType: HighLevelParser.ParseModuleWithErrors(SyntaxToken[])
  fullName: Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors(Ubytec.Language.Syntax.Model.SyntaxToken[])
  type: Method
  source:
    remote:
      path: Ubytec/Language/AST/HighLevelParser.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: ParseModuleWithErrors
    path: ../Ubytec/Language/AST/HighLevelParser.cs
    startLine: 21
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.AST
  syntax:
    content: public static (Module module, HighLevelParser.ParseError[] errors) ParseModuleWithErrors(SyntaxToken[] tokens)
    parameters:
    - id: tokens
      type: Ubytec.Language.Syntax.Model.SyntaxToken[]
    return:
      type: System.ValueTuple{Ubytec.Language.HighLevel.Module,Ubytec.Language.AST.HighLevelParser.ParseError[]}
    content.vb: Public Shared Function ParseModuleWithErrors(tokens As SyntaxToken()) As ([module] As [Module], errors As HighLevelParser.ParseError())
  overload: Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors*
  nameWithType.vb: HighLevelParser.ParseModuleWithErrors(SyntaxToken())
  fullName.vb: Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors(Ubytec.Language.Syntax.Model.SyntaxToken())
  name.vb: ParseModuleWithErrors(SyntaxToken())
references:
- uid: Ubytec.Language.AST
  commentId: N:Ubytec.Language.AST
  href: Ubytec.html
  name: Ubytec.Language.AST
  nameWithType: Ubytec.Language.AST
  fullName: Ubytec.Language.AST
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.AST
    name: AST
    href: Ubytec.Language.AST.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.AST
    name: AST
    href: Ubytec.Language.AST.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubytec.Language.AST.HighLevelParser.ParseModule*
  commentId: Overload:Ubytec.Language.AST.HighLevelParser.ParseModule
  href: Ubytec.Language.AST.HighLevelParser.html#Ubytec_Language_AST_HighLevelParser_ParseModule_Ubytec_Language_Syntax_Model_SyntaxToken___
  name: ParseModule
  nameWithType: HighLevelParser.ParseModule
  fullName: Ubytec.Language.AST.HighLevelParser.ParseModule
- uid: Ubytec.Language.Syntax.Model.SyntaxToken[]
  isExternal: true
  href: Ubytec.Language.Syntax.Model.SyntaxToken.html
  name: SyntaxToken[]
  nameWithType: SyntaxToken[]
  fullName: Ubytec.Language.Syntax.Model.SyntaxToken[]
  nameWithType.vb: SyntaxToken()
  fullName.vb: Ubytec.Language.Syntax.Model.SyntaxToken()
  name.vb: SyntaxToken()
  spec.csharp:
  - uid: Ubytec.Language.Syntax.Model.SyntaxToken
    name: SyntaxToken
    href: Ubytec.Language.Syntax.Model.SyntaxToken.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Ubytec.Language.Syntax.Model.SyntaxToken
    name: SyntaxToken
    href: Ubytec.Language.Syntax.Model.SyntaxToken.html
  - name: (
  - name: )
- uid: Ubytec.Language.HighLevel.Module
  commentId: T:Ubytec.Language.HighLevel.Module
  parent: Ubytec.Language.HighLevel
  href: Ubytec.Language.HighLevel.Module.html
  name: Module
  nameWithType: Module
  fullName: Ubytec.Language.HighLevel.Module
- uid: Ubytec.Language.HighLevel
  commentId: N:Ubytec.Language.HighLevel
  href: Ubytec.html
  name: Ubytec.Language.HighLevel
  nameWithType: Ubytec.Language.HighLevel
  fullName: Ubytec.Language.HighLevel
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.HighLevel
    name: HighLevel
    href: Ubytec.Language.HighLevel.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.HighLevel
    name: HighLevel
    href: Ubytec.Language.HighLevel.html
- uid: Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors*
  commentId: Overload:Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors
  href: Ubytec.Language.AST.HighLevelParser.html#Ubytec_Language_AST_HighLevelParser_ParseModuleWithErrors_Ubytec_Language_Syntax_Model_SyntaxToken___
  name: ParseModuleWithErrors
  nameWithType: HighLevelParser.ParseModuleWithErrors
  fullName: Ubytec.Language.AST.HighLevelParser.ParseModuleWithErrors
- uid: System.ValueTuple{Ubytec.Language.HighLevel.Module,Ubytec.Language.AST.HighLevelParser.ParseError[]}
  commentId: T:System.ValueTuple{Ubytec.Language.HighLevel.Module,Ubytec.Language.AST.HighLevelParser.ParseError[]}
  parent: System
  definition: System.ValueTuple`2
  href: Ubytec.Language.HighLevel.Module.html
  name: (Module module, HighLevelParser.ParseError[] errors)
  nameWithType: (Module module, HighLevelParser.ParseError[] errors)
  fullName: (Ubytec.Language.HighLevel.Module module, Ubytec.Language.AST.HighLevelParser.ParseError[] errors)
  nameWithType.vb: (module As Module, errors As HighLevelParser.ParseError())
  fullName.vb: (module As Ubytec.Language.HighLevel.Module, errors As Ubytec.Language.AST.HighLevelParser.ParseError())
  name.vb: (module As Module, errors As HighLevelParser.ParseError())
  spec.csharp:
  - name: (
  - uid: Ubytec.Language.HighLevel.Module
    name: Module
    href: Ubytec.Language.HighLevel.Module.html
  - name: " "
  - uid: System.ValueTuple{Ubytec.Language.HighLevel.Module,Ubytec.Language.AST.HighLevelParser.ParseError[]}.module
    name: module
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-ubytec.language.highlevel.module,ubytec.language.ast.highlevelparser.parseerror[]-.module
  - name: ','
  - name: " "
  - uid: Ubytec.Language.AST.HighLevelParser
    name: HighLevelParser
    href: Ubytec.Language.AST.HighLevelParser.html
  - name: .
  - uid: Ubytec.Language.AST.HighLevelParser.ParseError
    name: ParseError
    href: Ubytec.Language.AST.HighLevelParser.ParseError.html
  - name: '['
  - name: ']'
  - name: " "
  - uid: System.ValueTuple{Ubytec.Language.HighLevel.Module,Ubytec.Language.AST.HighLevelParser.ParseError[]}.errors
    name: errors
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-ubytec.language.highlevel.module,ubytec.language.ast.highlevelparser.parseerror[]-.errors
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{Ubytec.Language.HighLevel.Module,Ubytec.Language.AST.HighLevelParser.ParseError[]}.module
    name: module
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-ubytec.language.highlevel.module,ubytec.language.ast.highlevelparser.parseerror[]-.module
  - name: " "
  - name: As
  - name: " "
  - uid: Ubytec.Language.HighLevel.Module
    name: Module
    href: Ubytec.Language.HighLevel.Module.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Ubytec.Language.HighLevel.Module,Ubytec.Language.AST.HighLevelParser.ParseError[]}.errors
    name: errors
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-ubytec.language.highlevel.module,ubytec.language.ast.highlevelparser.parseerror[]-.errors
  - name: " "
  - name: As
  - name: " "
  - uid: Ubytec.Language.AST.HighLevelParser
    name: HighLevelParser
    href: Ubytec.Language.AST.HighLevelParser.html
  - name: .
  - uid: Ubytec.Language.AST.HighLevelParser.ParseError
    name: ParseError
    href: Ubytec.Language.AST.HighLevelParser.ParseError.html
  - name: (
  - name: )
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
