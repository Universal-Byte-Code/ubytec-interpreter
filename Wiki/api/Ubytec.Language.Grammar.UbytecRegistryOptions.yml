### YamlMime:ManagedReference
items:
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions
  commentId: T:Ubytec.Language.Grammar.UbytecRegistryOptions
  id: UbytecRegistryOptions
  parent: Ubytec.Language.Grammar
  children:
  - Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl
  - Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon(System.String)
  - Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme(System.String)
  - Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme
  - Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar(System.String)
  - Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections(System.String)
  - Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter(System.String,System.Text.Encoding)
  - Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme(System.String)
  - Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl
  - Ubytec.Language.Grammar.UbytecRegistryOptions._httpClient
  langs:
  - csharp
  - vb
  name: UbytecRegistryOptions
  nameWithType: UbytecRegistryOptions
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions
  type: Class
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: UbytecRegistryOptions
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 14
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: >-
    Provides configuration options and retrieval methods for TextMate grammars and themes

    used by the Ubytec language support in editors.
  example: []
  syntax:
    content: 'public class UbytecRegistryOptions : IRegistryOptions'
    content.vb: Public Class UbytecRegistryOptions Implements IRegistryOptions
  inheritance:
  - System.Object
  implements:
  - TextMateSharp.Registry.IRegistryOptions
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions._httpClient
  commentId: F:Ubytec.Language.Grammar.UbytecRegistryOptions._httpClient
  id: _httpClient
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: _httpClient
  nameWithType: UbytecRegistryOptions._httpClient
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions._httpClient
  type: Field
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: _httpClient
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 16
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  syntax:
    content: private static readonly HttpClient _httpClient
    return:
      type: System.Net.Http.HttpClient
    content.vb: Private Shared ReadOnly _httpClient As HttpClient
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl
  commentId: P:Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl
  id: LexiconUrl
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: LexiconUrl
  nameWithType: UbytecRegistryOptions.LexiconUrl
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl
  type: Property
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: LexiconUrl
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 21
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: URL of the TextMate grammar (lexicon) JSON file defining Ubytec syntax.
  example: []
  syntax:
    content: public Uri? LexiconUrl { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property LexiconUrl As Uri
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl*
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl
  commentId: P:Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl
  id: DefaultThemeUrl
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: DefaultThemeUrl
  nameWithType: UbytecRegistryOptions.DefaultThemeUrl
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl
  type: Property
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: DefaultThemeUrl
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 27
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: URL of the default TextMate theme JSON file for Ubytec syntax highlighting.
  example: []
  syntax:
    content: public Uri? DefaultThemeUrl { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property DefaultThemeUrl As Uri
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl*
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections(System.String)
  commentId: M:Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections(System.String)
  id: GetInjections(System.String)
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: GetInjections(string)
  nameWithType: UbytecRegistryOptions.GetInjections(string)
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections(string)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: GetInjections
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 36
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: Returns a collection of scope names that should be injected into the given scope.
  example: []
  syntax:
    content: public ICollection<string> GetInjections(string scopeName)
    parameters:
    - id: scopeName
      type: System.String
      description: The name of the scope for which to retrieve injections.
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: A collection of scope names to inject, or null if none.
    content.vb: Public Function GetInjections(scopeName As String) As ICollection(Of String)
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections*
  implements:
  - TextMateSharp.Registry.IRegistryOptions.GetInjections(System.String)
  nameWithType.vb: UbytecRegistryOptions.GetInjections(String)
  fullName.vb: Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections(String)
  name.vb: GetInjections(String)
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar(System.String)
  commentId: M:Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar(System.String)
  id: GetGrammar(System.String)
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: GetGrammar(string)
  nameWithType: UbytecRegistryOptions.GetGrammar(string)
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar(string)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: GetGrammar
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 44
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: Retrieves and parses the TextMate grammar for the specified scope.
  example: []
  syntax:
    content: public IRawGrammar? GetGrammar(string scopeName)
    parameters:
    - id: scopeName
      type: System.String
      description: The grammar scope name to load (e.g., "source.ubytec").
    return:
      type: TextMateSharp.Internal.Types.IRawGrammar
      description: An <xref href="TextMateSharp.Internal.Types.IRawGrammar" data-throw-if-not-resolved="false"></xref> representing the parsed grammar, or null on failure.
    content.vb: Public Function GetGrammar(scopeName As String) As IRawGrammar
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar*
  implements:
  - TextMateSharp.Registry.IRegistryOptions.GetGrammar(System.String)
  nameWithType.vb: UbytecRegistryOptions.GetGrammar(String)
  fullName.vb: Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar(String)
  name.vb: GetGrammar(String)
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme(System.String)
  commentId: M:Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme(System.String)
  id: GetTheme(System.String)
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: GetTheme(string)
  nameWithType: UbytecRegistryOptions.GetTheme(string)
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme(string)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: GetTheme
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 67
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: Retrieves a TextMate theme for the specified scope.
  example: []
  syntax:
    content: public IRawTheme GetTheme(string scopeName)
    parameters:
    - id: scopeName
      type: System.String
      description: The theme scope name to load.
    return:
      type: TextMateSharp.Themes.IRawTheme
      description: An <xref href="TextMateSharp.Themes.IRawTheme" data-throw-if-not-resolved="false"></xref> representing the theme, or null if not available.
    content.vb: Public Function GetTheme(scopeName As String) As IRawTheme
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme*
  implements:
  - TextMateSharp.Registry.IRegistryOptions.GetTheme(System.String)
  nameWithType.vb: UbytecRegistryOptions.GetTheme(String)
  fullName.vb: Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme(String)
  name.vb: GetTheme(String)
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme
  commentId: M:Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme
  id: GetDefaultTheme
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: GetDefaultTheme()
  nameWithType: UbytecRegistryOptions.GetDefaultTheme()
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme()
  type: Method
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: GetDefaultTheme
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 75
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: Retrieves and parses the default TextMate theme for Ubytec syntax highlighting.
  example: []
  syntax:
    content: public IRawTheme? GetDefaultTheme()
    return:
      type: TextMateSharp.Themes.IRawTheme
      description: An <xref href="TextMateSharp.Themes.IRawTheme" data-throw-if-not-resolved="false"></xref> representing the default theme.
    content.vb: Public Function GetDefaultTheme() As IRawTheme
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme*
  exceptions:
  - type: System.Net.Http.HttpIOException
    commentId: T:System.Net.Http.HttpIOException
    description: Thrown if the theme cannot be fetched or parsed.
  implements:
  - TextMateSharp.Registry.IRegistryOptions.GetDefaultTheme
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon(System.String)
  commentId: M:Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon(System.String)
  id: FetchLexicon(System.String)
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: FetchLexicon(string?)
  nameWithType: UbytecRegistryOptions.FetchLexicon(string?)
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon(string?)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: FetchLexicon
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 101
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: Asynchronously fetches the lexicon (grammar) content from the specified URL.
  example: []
  syntax:
    content: private static Task<string> FetchLexicon(string? lexiconUrl)
    parameters:
    - id: lexiconUrl
      type: System.String
      description: The absolute URI of the lexicon JSON file.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> producing the JSON content.
    content.vb: Private Shared Function FetchLexicon(lexiconUrl As String) As Task(Of String)
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon*
  exceptions:
  - type: Ubytec.Language.Exceptions.FetchLexiconException
    commentId: T:Ubytec.Language.Exceptions.FetchLexiconException
    description: Thrown if the HTTP request fails.
  nameWithType.vb: UbytecRegistryOptions.FetchLexicon(String)
  fullName.vb: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon(String)
  name.vb: FetchLexicon(String)
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme(System.String)
  commentId: M:Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme(System.String)
  id: FetchTheme(System.String)
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: FetchTheme(string?)
  nameWithType: UbytecRegistryOptions.FetchTheme(string?)
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme(string?)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: FetchTheme
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 121
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: Asynchronously fetches the theme content from the specified URL.
  example: []
  syntax:
    content: private static Task<string> FetchTheme(string? themeUrl)
    parameters:
    - id: themeUrl
      type: System.String
      description: The absolute URI of the theme JSON file.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> producing the JSON content.
    content.vb: Private Shared Function FetchTheme(themeUrl As String) As Task(Of String)
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme*
  exceptions:
  - type: Ubytec.Language.Exceptions.FetchLexiconException
    commentId: T:Ubytec.Language.Exceptions.FetchLexiconException
    description: Thrown if the HTTP request fails.
  nameWithType.vb: UbytecRegistryOptions.FetchTheme(String)
  fullName.vb: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme(String)
  name.vb: FetchTheme(String)
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter(System.String,System.Text.Encoding)
  commentId: M:Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter(System.String,System.Text.Encoding)
  id: GetStreamWithStreamWriter(System.String,System.Text.Encoding)
  parent: Ubytec.Language.Grammar.UbytecRegistryOptions
  langs:
  - csharp
  - vb
  name: GetStreamWithStreamWriter(string, Encoding?)
  nameWithType: UbytecRegistryOptions.GetStreamWithStreamWriter(string, Encoding?)
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter(string, System.Text.Encoding?)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Grammar/UbytecRegistryOptions.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: GetStreamWithStreamWriter
    path: ../Ubytec/Language/Grammar/UbytecRegistryOptions.cs
    startLine: 141
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Grammar
  summary: Creates a <xref href="System.IO.MemoryStream" data-throw-if-not-resolved="false"></xref> containing the specified string encoded using the given encoding.
  example: []
  syntax:
    content: private static MemoryStream GetStreamWithStreamWriter(string sampleString, Encoding? encoding = null)
    parameters:
    - id: sampleString
      type: System.String
      description: The string to write into the stream.
    - id: encoding
      type: System.Text.Encoding
      description: The text encoding to apply. Defaults to <xref href="System.Text.Encoding.Default" data-throw-if-not-resolved="false"></xref> if null.
    return:
      type: System.IO.MemoryStream
      description: A <xref href="System.IO.MemoryStream" data-throw-if-not-resolved="false"></xref> positioned at the beginning containing the encoded text.
    content.vb: Private Shared Function GetStreamWithStreamWriter(sampleString As String, encoding As Encoding = Nothing) As MemoryStream
  overload: Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter*
  nameWithType.vb: UbytecRegistryOptions.GetStreamWithStreamWriter(String, Encoding)
  fullName.vb: Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter(String, System.Text.Encoding)
  name.vb: GetStreamWithStreamWriter(String, Encoding)
references:
- uid: Ubytec.Language.Grammar
  commentId: N:Ubytec.Language.Grammar
  href: Ubytec.html
  name: Ubytec.Language.Grammar
  nameWithType: Ubytec.Language.Grammar
  fullName: Ubytec.Language.Grammar
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Grammar
    name: Grammar
    href: Ubytec.Language.Grammar.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Grammar
    name: Grammar
    href: Ubytec.Language.Grammar.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TextMateSharp.Registry.IRegistryOptions
  commentId: T:TextMateSharp.Registry.IRegistryOptions
  parent: TextMateSharp.Registry
  isExternal: true
  name: IRegistryOptions
  nameWithType: IRegistryOptions
  fullName: TextMateSharp.Registry.IRegistryOptions
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TextMateSharp.Registry
  commentId: N:TextMateSharp.Registry
  isExternal: true
  name: TextMateSharp.Registry
  nameWithType: TextMateSharp.Registry
  fullName: TextMateSharp.Registry
  spec.csharp:
  - uid: TextMateSharp
    name: TextMateSharp
    isExternal: true
  - name: .
  - uid: TextMateSharp.Registry
    name: Registry
    isExternal: true
  spec.vb:
  - uid: TextMateSharp
    name: TextMateSharp
    isExternal: true
  - name: .
  - uid: TextMateSharp.Registry
    name: Registry
    isExternal: true
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl.html#Ubytec_Language_Grammar_UbytecRegistryOptions_LexiconUrl
  name: LexiconUrl
  nameWithType: UbytecRegistryOptions.LexiconUrl
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.LexiconUrl
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl.html#Ubytec_Language_Grammar_UbytecRegistryOptions_DefaultThemeUrl
  name: DefaultThemeUrl
  nameWithType: UbytecRegistryOptions.DefaultThemeUrl
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.DefaultThemeUrl
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections.html#Ubytec_Language_Grammar_UbytecRegistryOptions_GetInjections_System_String_
  name: GetInjections
  nameWithType: UbytecRegistryOptions.GetInjections
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetInjections
- uid: TextMateSharp.Registry.IRegistryOptions.GetInjections(System.String)
  commentId: M:TextMateSharp.Registry.IRegistryOptions.GetInjections(System.String)
  parent: TextMateSharp.Registry.IRegistryOptions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetInjections(string)
  nameWithType: IRegistryOptions.GetInjections(string)
  fullName: TextMateSharp.Registry.IRegistryOptions.GetInjections(string)
  nameWithType.vb: IRegistryOptions.GetInjections(String)
  fullName.vb: TextMateSharp.Registry.IRegistryOptions.GetInjections(String)
  name.vb: GetInjections(String)
  spec.csharp:
  - uid: TextMateSharp.Registry.IRegistryOptions.GetInjections(System.String)
    name: GetInjections
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: TextMateSharp.Registry.IRegistryOptions.GetInjections(System.String)
    name: GetInjections
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TextMateSharp.Internal.Types.IRawGrammar
  commentId: T:TextMateSharp.Internal.Types.IRawGrammar
  parent: TextMateSharp.Internal.Types
  isExternal: true
  name: IRawGrammar
  nameWithType: IRawGrammar
  fullName: TextMateSharp.Internal.Types.IRawGrammar
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar.html#Ubytec_Language_Grammar_UbytecRegistryOptions_GetGrammar_System_String_
  name: GetGrammar
  nameWithType: UbytecRegistryOptions.GetGrammar
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetGrammar
- uid: TextMateSharp.Registry.IRegistryOptions.GetGrammar(System.String)
  commentId: M:TextMateSharp.Registry.IRegistryOptions.GetGrammar(System.String)
  parent: TextMateSharp.Registry.IRegistryOptions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetGrammar(string)
  nameWithType: IRegistryOptions.GetGrammar(string)
  fullName: TextMateSharp.Registry.IRegistryOptions.GetGrammar(string)
  nameWithType.vb: IRegistryOptions.GetGrammar(String)
  fullName.vb: TextMateSharp.Registry.IRegistryOptions.GetGrammar(String)
  name.vb: GetGrammar(String)
  spec.csharp:
  - uid: TextMateSharp.Registry.IRegistryOptions.GetGrammar(System.String)
    name: GetGrammar
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: TextMateSharp.Registry.IRegistryOptions.GetGrammar(System.String)
    name: GetGrammar
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: TextMateSharp.Internal.Types
  commentId: N:TextMateSharp.Internal.Types
  isExternal: true
  name: TextMateSharp.Internal.Types
  nameWithType: TextMateSharp.Internal.Types
  fullName: TextMateSharp.Internal.Types
  spec.csharp:
  - uid: TextMateSharp
    name: TextMateSharp
    isExternal: true
  - name: .
  - uid: TextMateSharp.Internal
    name: Internal
    isExternal: true
  - name: .
  - uid: TextMateSharp.Internal.Types
    name: Types
    isExternal: true
  spec.vb:
  - uid: TextMateSharp
    name: TextMateSharp
    isExternal: true
  - name: .
  - uid: TextMateSharp.Internal
    name: Internal
    isExternal: true
  - name: .
  - uid: TextMateSharp.Internal.Types
    name: Types
    isExternal: true
- uid: TextMateSharp.Themes.IRawTheme
  commentId: T:TextMateSharp.Themes.IRawTheme
  parent: TextMateSharp.Themes
  isExternal: true
  name: IRawTheme
  nameWithType: IRawTheme
  fullName: TextMateSharp.Themes.IRawTheme
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme.html#Ubytec_Language_Grammar_UbytecRegistryOptions_GetTheme_System_String_
  name: GetTheme
  nameWithType: UbytecRegistryOptions.GetTheme
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetTheme
- uid: TextMateSharp.Registry.IRegistryOptions.GetTheme(System.String)
  commentId: M:TextMateSharp.Registry.IRegistryOptions.GetTheme(System.String)
  parent: TextMateSharp.Registry.IRegistryOptions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetTheme(string)
  nameWithType: IRegistryOptions.GetTheme(string)
  fullName: TextMateSharp.Registry.IRegistryOptions.GetTheme(string)
  nameWithType.vb: IRegistryOptions.GetTheme(String)
  fullName.vb: TextMateSharp.Registry.IRegistryOptions.GetTheme(String)
  name.vb: GetTheme(String)
  spec.csharp:
  - uid: TextMateSharp.Registry.IRegistryOptions.GetTheme(System.String)
    name: GetTheme
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: TextMateSharp.Registry.IRegistryOptions.GetTheme(System.String)
    name: GetTheme
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: TextMateSharp.Themes
  commentId: N:TextMateSharp.Themes
  isExternal: true
  name: TextMateSharp.Themes
  nameWithType: TextMateSharp.Themes
  fullName: TextMateSharp.Themes
  spec.csharp:
  - uid: TextMateSharp
    name: TextMateSharp
    isExternal: true
  - name: .
  - uid: TextMateSharp.Themes
    name: Themes
    isExternal: true
  spec.vb:
  - uid: TextMateSharp
    name: TextMateSharp
    isExternal: true
  - name: .
  - uid: TextMateSharp.Themes
    name: Themes
    isExternal: true
- uid: System.Net.Http.HttpIOException
  commentId: T:System.Net.Http.HttpIOException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpioexception
  name: HttpIOException
  nameWithType: HttpIOException
  fullName: System.Net.Http.HttpIOException
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme.html#Ubytec_Language_Grammar_UbytecRegistryOptions_GetDefaultTheme
  name: GetDefaultTheme
  nameWithType: UbytecRegistryOptions.GetDefaultTheme
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetDefaultTheme
- uid: TextMateSharp.Registry.IRegistryOptions.GetDefaultTheme
  commentId: M:TextMateSharp.Registry.IRegistryOptions.GetDefaultTheme
  parent: TextMateSharp.Registry.IRegistryOptions
  isExternal: true
  name: GetDefaultTheme()
  nameWithType: IRegistryOptions.GetDefaultTheme()
  fullName: TextMateSharp.Registry.IRegistryOptions.GetDefaultTheme()
  spec.csharp:
  - uid: TextMateSharp.Registry.IRegistryOptions.GetDefaultTheme
    name: GetDefaultTheme
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: TextMateSharp.Registry.IRegistryOptions.GetDefaultTheme
    name: GetDefaultTheme
    isExternal: true
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Ubytec.Language.Exceptions.FetchLexiconException
  commentId: T:Ubytec.Language.Exceptions.FetchLexiconException
  href: Ubytec.Language.Exceptions.FetchLexiconException.html
  name: FetchLexiconException
  nameWithType: FetchLexiconException
  fullName: Ubytec.Language.Exceptions.FetchLexiconException
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon.html#Ubytec_Language_Grammar_UbytecRegistryOptions_FetchLexicon_System_String_
  name: FetchLexicon
  nameWithType: UbytecRegistryOptions.FetchLexicon
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchLexicon
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme.html#Ubytec_Language_Grammar_UbytecRegistryOptions_FetchTheme_System_String_
  name: FetchTheme
  nameWithType: UbytecRegistryOptions.FetchTheme
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.FetchTheme
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.memorystream
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.Text.Encoding.Default
  commentId: P:System.Text.Encoding.Default
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding.default
  name: Default
  nameWithType: Encoding.Default
  fullName: System.Text.Encoding.Default
- uid: Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter*
  commentId: Overload:Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter
  href: Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter.html#Ubytec_Language_Grammar_UbytecRegistryOptions_GetStreamWithStreamWriter_System_String_System_Text_Encoding_
  name: GetStreamWithStreamWriter
  nameWithType: UbytecRegistryOptions.GetStreamWithStreamWriter
  fullName: Ubytec.Language.Grammar.UbytecRegistryOptions.GetStreamWithStreamWriter
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
memberLayout: SeparatePages
