### YamlMime:ManagedReference
items:
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  commentId: T:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  id: ConditionExpressionFragment
  parent: Ubytec.Language.Syntax.ExpressionFragments
  children:
  - Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.#ctor(System.Object,System.String,System.Object)
  - Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left
  - Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand
  - Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right
  - Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens
  langs:
  - csharp
  - vb
  name: ConditionExpressionFragment
  nameWithType: ConditionExpressionFragment
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  type: Struct
  source:
    remote:
      path: Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: ConditionExpressionFragment
    path: ../Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
    startLine: 20
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Syntax.ExpressionFragments
  summary: >-
    A fragment representing a conditional expression in Ubytec syntax,

    consisting of a left operand, an operator, and a right operand.
  example: []
  syntax:
    content: 'public readonly record struct ConditionExpressionFragment : IUbytecExpressionFragment, IEquatable<ConditionExpressionFragment>'
    content.vb: Public Structure ConditionExpressionFragment Implements IUbytecExpressionFragment, IEquatable(Of ConditionExpressionFragment)
  implements:
  - Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment
  - System.IEquatable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.#ctor(System.Object,System.String,System.Object)
  commentId: M:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.#ctor(System.Object,System.String,System.Object)
  id: '#ctor(System.Object,System.String,System.Object)'
  parent: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  langs:
  - csharp
  - vb
  name: ConditionExpressionFragment(object?, string?, object?)
  nameWithType: ConditionExpressionFragment.ConditionExpressionFragment(object?, string?, object?)
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.ConditionExpressionFragment(object?, string?, object?)
  type: Constructor
  source:
    remote:
      path: Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: .ctor
    path: ../Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
    startLine: 20
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Syntax.ExpressionFragments
  summary: >-
    A fragment representing a conditional expression in Ubytec syntax,

    consisting of a left operand, an operator, and a right operand.
  example: []
  syntax:
    content: public ConditionExpressionFragment(object? Left, string? Operand, object? Right)
    parameters:
    - id: Left
      type: System.Object
      description: The left-hand side of the condition; can be any supported literal or expression result.
    - id: Operand
      type: System.String
      description: >-
        The operator string (e.g., "==", "&lt;", "&gt;=") used in the condition;

        may be <code>null</code> if the operator is implicit or not yet determined.
    - id: Right
      type: System.Object
      description: The right-hand side of the condition; can be any supported literal or expression result.
    content.vb: Public Sub New(Left As Object, Operand As String, Right As Object)
  overload: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.#ctor*
  nameWithType.vb: ConditionExpressionFragment.New(Object, String, Object)
  fullName.vb: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.New(Object, String, Object)
  name.vb: New(Object, String, Object)
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left
  commentId: P:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left
  id: Left
  parent: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: ConditionExpressionFragment.Left
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left
  type: Property
  source:
    remote:
      path: Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: Left
    path: ../Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
    startLine: 20
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Syntax.ExpressionFragments
  summary: The left-hand side of the condition; can be any supported literal or expression result.
  example: []
  syntax:
    content: public object? Left { get; init; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Left As Object
  overload: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left*
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand
  commentId: P:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand
  id: Operand
  parent: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  langs:
  - csharp
  - vb
  name: Operand
  nameWithType: ConditionExpressionFragment.Operand
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand
  type: Property
  source:
    remote:
      path: Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: Operand
    path: ../Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
    startLine: 20
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Syntax.ExpressionFragments
  summary: >-
    The operator string (e.g., "==", "&lt;", "&gt;=") used in the condition;

    may be <code>null</code> if the operator is implicit or not yet determined.
  example: []
  syntax:
    content: public string? Operand { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Operand As String
  overload: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand*
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right
  commentId: P:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right
  id: Right
  parent: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: ConditionExpressionFragment.Right
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right
  type: Property
  source:
    remote:
      path: Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: Right
    path: ../Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
    startLine: 20
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Syntax.ExpressionFragments
  summary: The right-hand side of the condition; can be any supported literal or expression result.
  example: []
  syntax:
    content: public object? Right { get; init; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Right As Object
  overload: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right*
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens
  commentId: P:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens
  id: Tokens
  parent: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: ConditionExpressionFragment.Tokens
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens
  type: Property
  source:
    remote:
      path: Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: Tokens
    path: ../Ubytec/Language/Syntax/ExpressionFragments/ConditionExpressionFragment.cs
    startLine: 26
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Syntax.ExpressionFragments
  summary: Gets the lexical <xref href="Ubytec.Language.Syntax.Model.SyntaxToken" data-throw-if-not-resolved="false"></xref> sequence that produced this condition fragment.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      public required SyntaxToken[] Tokens { get; init; }
    parameters: []
    return:
      type: Ubytec.Language.Syntax.Model.SyntaxToken[]
    content.vb: >-
      <JsonInclude>

      Public Property Tokens As SyntaxToken()
  overload: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens*
  implements:
  - Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment.Tokens
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
references:
- uid: Ubytec.Language.Syntax.ExpressionFragments
  commentId: N:Ubytec.Language.Syntax.ExpressionFragments
  href: Ubytec.html
  name: Ubytec.Language.Syntax.ExpressionFragments
  nameWithType: Ubytec.Language.Syntax.ExpressionFragments
  fullName: Ubytec.Language.Syntax.ExpressionFragments
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.ExpressionFragments
    name: ExpressionFragments
    href: Ubytec.Language.Syntax.ExpressionFragments.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.ExpressionFragments
    name: ExpressionFragments
    href: Ubytec.Language.Syntax.ExpressionFragments.html
- uid: Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment
  commentId: T:Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment
  parent: Ubytec.Language.Syntax.Interfaces
  href: Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment.html
  name: IUbytecExpressionFragment
  nameWithType: IUbytecExpressionFragment
  fullName: Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment
- uid: System.IEquatable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment}
  commentId: T:System.IEquatable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ConditionExpressionFragment>
  nameWithType: IEquatable<ConditionExpressionFragment>
  fullName: System.IEquatable<Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment>
  nameWithType.vb: IEquatable(Of ConditionExpressionFragment)
  fullName.vb: System.IEquatable(Of Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment)
  name.vb: IEquatable(Of ConditionExpressionFragment)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
    name: ConditionExpressionFragment
    href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
    name: ConditionExpressionFragment
    href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubytec.Language.Syntax.Interfaces
  commentId: N:Ubytec.Language.Syntax.Interfaces
  href: Ubytec.html
  name: Ubytec.Language.Syntax.Interfaces
  nameWithType: Ubytec.Language.Syntax.Interfaces
  fullName: Ubytec.Language.Syntax.Interfaces
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.Interfaces
    name: Interfaces
    href: Ubytec.Language.Syntax.Interfaces.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.Interfaces
    name: Interfaces
    href: Ubytec.Language.Syntax.Interfaces.html
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.#ctor*
  commentId: Overload:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.#ctor
  href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.-ctor.html#Ubytec_Language_Syntax_ExpressionFragments_ConditionExpressionFragment__ctor_System_Object_System_String_System_Object_
  name: ConditionExpressionFragment
  nameWithType: ConditionExpressionFragment.ConditionExpressionFragment
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.ConditionExpressionFragment
  nameWithType.vb: ConditionExpressionFragment.New
  fullName.vb: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left*
  commentId: Overload:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left
  href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left.html#Ubytec_Language_Syntax_ExpressionFragments_ConditionExpressionFragment_Left
  name: Left
  nameWithType: ConditionExpressionFragment.Left
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Left
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand*
  commentId: Overload:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand
  href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand.html#Ubytec_Language_Syntax_ExpressionFragments_ConditionExpressionFragment_Operand
  name: Operand
  nameWithType: ConditionExpressionFragment.Operand
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Operand
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right*
  commentId: Overload:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right
  href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right.html#Ubytec_Language_Syntax_ExpressionFragments_ConditionExpressionFragment_Right
  name: Right
  nameWithType: ConditionExpressionFragment.Right
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Right
- uid: Ubytec.Language.Syntax.Model.SyntaxToken
  commentId: T:Ubytec.Language.Syntax.Model.SyntaxToken
  parent: Ubytec.Language.Syntax.Model
  href: Ubytec.Language.Syntax.Model.SyntaxToken.html
  name: SyntaxToken
  nameWithType: SyntaxToken
  fullName: Ubytec.Language.Syntax.Model.SyntaxToken
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens*
  commentId: Overload:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens
  href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens.html#Ubytec_Language_Syntax_ExpressionFragments_ConditionExpressionFragment_Tokens
  name: Tokens
  nameWithType: ConditionExpressionFragment.Tokens
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.Tokens
- uid: Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment.Tokens
  commentId: P:Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment.Tokens
  parent: Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment
  href: Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment.Tokens.html#Ubytec_Language_Syntax_Interfaces_IUbytecExpressionFragment_Tokens
  name: Tokens
  nameWithType: IUbytecExpressionFragment.Tokens
  fullName: Ubytec.Language.Syntax.Interfaces.IUbytecExpressionFragment.Tokens
- uid: Ubytec.Language.Syntax.Model.SyntaxToken[]
  isExternal: true
  href: Ubytec.Language.Syntax.Model.SyntaxToken.html
  name: SyntaxToken[]
  nameWithType: SyntaxToken[]
  fullName: Ubytec.Language.Syntax.Model.SyntaxToken[]
  nameWithType.vb: SyntaxToken()
  fullName.vb: Ubytec.Language.Syntax.Model.SyntaxToken()
  name.vb: SyntaxToken()
  spec.csharp:
  - uid: Ubytec.Language.Syntax.Model.SyntaxToken
    name: SyntaxToken
    href: Ubytec.Language.Syntax.Model.SyntaxToken.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Ubytec.Language.Syntax.Model.SyntaxToken
    name: SyntaxToken
    href: Ubytec.Language.Syntax.Model.SyntaxToken.html
  - name: (
  - name: )
- uid: Ubytec.Language.Syntax.Model
  commentId: N:Ubytec.Language.Syntax.Model
  href: Ubytec.html
  name: Ubytec.Language.Syntax.Model
  nameWithType: Ubytec.Language.Syntax.Model
  fullName: Ubytec.Language.Syntax.Model
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.Model
    name: Model
    href: Ubytec.Language.Syntax.Model.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.Model
    name: Model
    href: Ubytec.Language.Syntax.Model.html
memberLayout: SeparatePages
