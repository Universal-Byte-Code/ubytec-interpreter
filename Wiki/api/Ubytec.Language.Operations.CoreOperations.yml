### YamlMime:ManagedReference
items:
- uid: Ubytec.Language.Operations.CoreOperations
  commentId: T:Ubytec.Language.Operations.CoreOperations
  id: CoreOperations
  parent: Ubytec.Language.Operations
  children:
  - Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition(System.Nullable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment},System.String)
  - Ubytec.Language.Operations.CoreOperations.NextLabel(System.String)
  - Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment,System.String,System.String)
  - Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment,Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment[])
  - Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType(Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType)
  - Ubytec.Language.Operations.CoreOperations._prefixToLabelCounterMap
  langs:
  - csharp
  - vb
  name: CoreOperations
  nameWithType: CoreOperations
  fullName: Ubytec.Language.Operations.CoreOperations
  type: Class
  source:
    remote:
      path: Ubytec/Language/Operations/Core/Instructions/CoreOperations.TRAP.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: CoreOperations
    path: ../Ubytec/Language/Operations/Core/Instructions/CoreOperations.TRAP.cs
    startLine: 7
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Operations
  syntax:
    content: public static class CoreOperations
    content.vb: Public Module CoreOperations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubytec.Language.Operations.CoreOperations._prefixToLabelCounterMap
  commentId: F:Ubytec.Language.Operations.CoreOperations._prefixToLabelCounterMap
  id: _prefixToLabelCounterMap
  parent: Ubytec.Language.Operations.CoreOperations
  langs:
  - csharp
  - vb
  name: _prefixToLabelCounterMap
  nameWithType: CoreOperations._prefixToLabelCounterMap
  fullName: Ubytec.Language.Operations.CoreOperations._prefixToLabelCounterMap
  type: Field
  source:
    remote:
      path: Ubytec/Language/Operations/CoreOperations.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: _prefixToLabelCounterMap
    path: ../Ubytec/Language/Operations/CoreOperations.cs
    startLine: 10
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Operations
  syntax:
    content: private static readonly Dictionary<string, int> _prefixToLabelCounterMap
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Private Shared ReadOnly _prefixToLabelCounterMap As Dictionary(Of String, Integer)
- uid: Ubytec.Language.Operations.CoreOperations.NextLabel(System.String)
  commentId: M:Ubytec.Language.Operations.CoreOperations.NextLabel(System.String)
  id: NextLabel(System.String)
  parent: Ubytec.Language.Operations.CoreOperations
  langs:
  - csharp
  - vb
  name: NextLabel(string)
  nameWithType: CoreOperations.NextLabel(string)
  fullName: Ubytec.Language.Operations.CoreOperations.NextLabel(string)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Operations/CoreOperations.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: NextLabel
    path: ../Ubytec/Language/Operations/CoreOperations.cs
    startLine: 13
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Operations
  syntax:
    content: private static string NextLabel(string prefix)
    parameters:
    - id: prefix
      type: System.String
    return:
      type: System.String
    content.vb: Private Shared Function NextLabel(prefix As String) As String
  overload: Ubytec.Language.Operations.CoreOperations.NextLabel*
  nameWithType.vb: CoreOperations.NextLabel(String)
  fullName.vb: Ubytec.Language.Operations.CoreOperations.NextLabel(String)
  name.vb: NextLabel(String)
- uid: Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType(Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType)
  commentId: M:Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType(Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType)
  id: ValidateConditionalBlockType(Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType)
  parent: Ubytec.Language.Operations.CoreOperations
  langs:
  - csharp
  - vb
  name: ValidateConditionalBlockType(PrimitiveType)
  nameWithType: CoreOperations.ValidateConditionalBlockType(Types.PrimitiveType)
  fullName: Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType(Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Operations/CoreOperations.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: ValidateConditionalBlockType
    path: ../Ubytec/Language/Operations/CoreOperations.cs
    startLine: 19
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Operations
  syntax:
    content: private static bool ValidateConditionalBlockType(Types.PrimitiveType blockType)
    parameters:
    - id: blockType
      type: Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType
    return:
      type: System.Boolean
    content.vb: Private Shared Function ValidateConditionalBlockType(blockType As Types.PrimitiveType) As Boolean
  overload: Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType*
- uid: Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment,System.String,System.String)
  commentId: M:Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment,System.String,System.String)
  id: ProcessConditionFragment(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment,System.String,System.String)
  parent: Ubytec.Language.Operations.CoreOperations
  langs:
  - csharp
  - vb
  name: ProcessConditionFragment(ConditionExpressionFragment, string, string)
  nameWithType: CoreOperations.ProcessConditionFragment(ConditionExpressionFragment, string, string)
  fullName: Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment, string, string)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Operations/CoreOperations.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: ProcessConditionFragment
    path: ../Ubytec/Language/Operations/CoreOperations.cs
    startLine: 20
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Operations
  syntax:
    content: private static string ProcessConditionFragment(ConditionExpressionFragment fragment, string ifLabel, string ifEndLabel)
    parameters:
    - id: fragment
      type: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
    - id: ifLabel
      type: System.String
    - id: ifEndLabel
      type: System.String
    return:
      type: System.String
    content.vb: Private Shared Function ProcessConditionFragment(fragment As ConditionExpressionFragment, ifLabel As String, ifEndLabel As String) As String
  overload: Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment*
  nameWithType.vb: CoreOperations.ProcessConditionFragment(ConditionExpressionFragment, String, String)
  fullName.vb: Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment, String, String)
  name.vb: ProcessConditionFragment(ConditionExpressionFragment, String, String)
- uid: Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment,Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment[])
  commentId: M:Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment,Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment[])
  id: ProcessFragmentDereference(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment,Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment[])
  parent: Ubytec.Language.Operations.CoreOperations
  langs:
  - csharp
  - vb
  name: ProcessFragmentDereference(ConditionExpressionFragment, VariableExpressionFragment[])
  nameWithType: CoreOperations.ProcessFragmentDereference(ConditionExpressionFragment, VariableExpressionFragment[])
  fullName: Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment, Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment[])
  type: Method
  source:
    remote:
      path: Ubytec/Language/Operations/CoreOperations.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: ProcessFragmentDereference
    path: ../Ubytec/Language/Operations/CoreOperations.cs
    startLine: 53
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Operations
  syntax:
    content: private static ConditionExpressionFragment ProcessFragmentDereference(ConditionExpressionFragment conditionFragment, VariableExpressionFragment[] variables)
    parameters:
    - id: conditionFragment
      type: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
    - id: variables
      type: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment[]
    return:
      type: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
    content.vb: Private Shared Function ProcessFragmentDereference(conditionFragment As ConditionExpressionFragment, variables As VariableExpressionFragment()) As ConditionExpressionFragment
  overload: Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference*
  nameWithType.vb: CoreOperations.ProcessFragmentDereference(ConditionExpressionFragment, VariableExpressionFragment())
  fullName.vb: Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment, Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment())
  name.vb: ProcessFragmentDereference(ConditionExpressionFragment, VariableExpressionFragment())
- uid: Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition(System.Nullable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment},System.String)
  commentId: M:Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition(System.Nullable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment},System.String)
  id: GenerateWhileCondition(System.Nullable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment},System.String)
  parent: Ubytec.Language.Operations.CoreOperations
  langs:
  - csharp
  - vb
  name: GenerateWhileCondition(ConditionExpressionFragment?, string)
  nameWithType: CoreOperations.GenerateWhileCondition(ConditionExpressionFragment?, string)
  fullName: Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment?, string)
  type: Method
  source:
    remote:
      path: Ubytec/Language/Operations/CoreOperations.cs
      branch: main
      repo: https://github.com/Universal-Byte-Code/ubytec-interpreter.git
    id: GenerateWhileCondition
    path: ../Ubytec/Language/Operations/CoreOperations.cs
    startLine: 102
  assemblies:
  - Ubytec
  namespace: Ubytec.Language.Operations
  summary: >-
    Similar logic to your IF’s condition. If Condition != null,

    do “mov rax, left; cmp rax, right; [jumpInstruction] endLabel”.

    Otherwise do “pop rax; cmp rax, 0; je endLabel”.
  example: []
  syntax:
    content: private static string GenerateWhileCondition(ConditionExpressionFragment? cond, string endLabel)
    parameters:
    - id: cond
      type: System.Nullable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment}
    - id: endLabel
      type: System.String
    return:
      type: System.String
    content.vb: Private Shared Function GenerateWhileCondition(cond As ConditionExpressionFragment?, endLabel As String) As String
  overload: Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition*
  nameWithType.vb: CoreOperations.GenerateWhileCondition(ConditionExpressionFragment?, String)
  fullName.vb: Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition(Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment?, String)
  name.vb: GenerateWhileCondition(ConditionExpressionFragment?, String)
references:
- uid: Ubytec.Language.Operations
  commentId: N:Ubytec.Language.Operations
  href: Ubytec.html
  name: Ubytec.Language.Operations
  nameWithType: Ubytec.Language.Operations
  fullName: Ubytec.Language.Operations
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Operations
    name: Operations
    href: Ubytec.Language.Operations.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Operations
    name: Operations
    href: Ubytec.Language.Operations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, int>
  nameWithType: Dictionary<string, int>
  fullName: System.Collections.Generic.Dictionary<string, int>
  nameWithType.vb: Dictionary(Of String, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Integer)
  name.vb: Dictionary(Of String, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Ubytec.Language.Operations.CoreOperations.NextLabel*
  commentId: Overload:Ubytec.Language.Operations.CoreOperations.NextLabel
  href: Ubytec.Language.Operations.CoreOperations.NextLabel.html#Ubytec_Language_Operations_CoreOperations_NextLabel_System_String_
  name: NextLabel
  nameWithType: CoreOperations.NextLabel
  fullName: Ubytec.Language.Operations.CoreOperations.NextLabel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType*
  commentId: Overload:Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType
  href: Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType.html#Ubytec_Language_Operations_CoreOperations_ValidateConditionalBlockType_Ubytec_Language_Syntax_TypeSystem_Types_PrimitiveType_
  name: ValidateConditionalBlockType
  nameWithType: CoreOperations.ValidateConditionalBlockType
  fullName: Ubytec.Language.Operations.CoreOperations.ValidateConditionalBlockType
- uid: Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType
  commentId: T:Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType
  parent: Ubytec.Language.Syntax.TypeSystem
  href: Ubytec.Language.Syntax.TypeSystem.Types.html
  name: Types.PrimitiveType
  nameWithType: Types.PrimitiveType
  fullName: Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType
  spec.csharp:
  - uid: Ubytec.Language.Syntax.TypeSystem.Types
    name: Types
    href: Ubytec.Language.Syntax.TypeSystem.Types.html
  - name: .
  - uid: Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType
    name: PrimitiveType
    href: Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType.html
  spec.vb:
  - uid: Ubytec.Language.Syntax.TypeSystem.Types
    name: Types
    href: Ubytec.Language.Syntax.TypeSystem.Types.html
  - name: .
  - uid: Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType
    name: PrimitiveType
    href: Ubytec.Language.Syntax.TypeSystem.Types.PrimitiveType.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubytec.Language.Syntax.TypeSystem
  commentId: N:Ubytec.Language.Syntax.TypeSystem
  href: Ubytec.html
  name: Ubytec.Language.Syntax.TypeSystem
  nameWithType: Ubytec.Language.Syntax.TypeSystem
  fullName: Ubytec.Language.Syntax.TypeSystem
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.TypeSystem
    name: TypeSystem
    href: Ubytec.Language.Syntax.TypeSystem.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.TypeSystem
    name: TypeSystem
    href: Ubytec.Language.Syntax.TypeSystem.html
- uid: Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment*
  commentId: Overload:Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment
  href: Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment.html#Ubytec_Language_Operations_CoreOperations_ProcessConditionFragment_Ubytec_Language_Syntax_ExpressionFragments_ConditionExpressionFragment_System_String_System_String_
  name: ProcessConditionFragment
  nameWithType: CoreOperations.ProcessConditionFragment
  fullName: Ubytec.Language.Operations.CoreOperations.ProcessConditionFragment
- uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  commentId: T:Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
  parent: Ubytec.Language.Syntax.ExpressionFragments
  href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.html
  name: ConditionExpressionFragment
  nameWithType: ConditionExpressionFragment
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
- uid: Ubytec.Language.Syntax.ExpressionFragments
  commentId: N:Ubytec.Language.Syntax.ExpressionFragments
  href: Ubytec.html
  name: Ubytec.Language.Syntax.ExpressionFragments
  nameWithType: Ubytec.Language.Syntax.ExpressionFragments
  fullName: Ubytec.Language.Syntax.ExpressionFragments
  spec.csharp:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.ExpressionFragments
    name: ExpressionFragments
    href: Ubytec.Language.Syntax.ExpressionFragments.html
  spec.vb:
  - uid: Ubytec
    name: Ubytec
    href: Ubytec.html
  - name: .
  - uid: Ubytec.Language
    name: Language
    href: Ubytec.Language.html
  - name: .
  - uid: Ubytec.Language.Syntax
    name: Syntax
    href: Ubytec.Language.Syntax.html
  - name: .
  - uid: Ubytec.Language.Syntax.ExpressionFragments
    name: ExpressionFragments
    href: Ubytec.Language.Syntax.ExpressionFragments.html
- uid: Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference*
  commentId: Overload:Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference
  href: Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference.html#Ubytec_Language_Operations_CoreOperations_ProcessFragmentDereference_Ubytec_Language_Syntax_ExpressionFragments_ConditionExpressionFragment_Ubytec_Language_Syntax_ExpressionFragments_VariableExpressionFragment___
  name: ProcessFragmentDereference
  nameWithType: CoreOperations.ProcessFragmentDereference
  fullName: Ubytec.Language.Operations.CoreOperations.ProcessFragmentDereference
- uid: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment[]
  isExternal: true
  href: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment.html
  name: VariableExpressionFragment[]
  nameWithType: VariableExpressionFragment[]
  fullName: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment[]
  nameWithType.vb: VariableExpressionFragment()
  fullName.vb: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment()
  name.vb: VariableExpressionFragment()
  spec.csharp:
  - uid: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment
    name: VariableExpressionFragment
    href: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment
    name: VariableExpressionFragment
    href: Ubytec.Language.Syntax.ExpressionFragments.VariableExpressionFragment.html
  - name: (
  - name: )
- uid: Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition*
  commentId: Overload:Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition
  href: Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition.html#Ubytec_Language_Operations_CoreOperations_GenerateWhileCondition_System_Nullable_Ubytec_Language_Syntax_ExpressionFragments_ConditionExpressionFragment__System_String_
  name: GenerateWhileCondition
  nameWithType: CoreOperations.GenerateWhileCondition
  fullName: Ubytec.Language.Operations.CoreOperations.GenerateWhileCondition
- uid: System.Nullable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment}
  commentId: T:System.Nullable{Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment}
  parent: System
  definition: System.Nullable`1
  href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.html
  name: ConditionExpressionFragment?
  nameWithType: ConditionExpressionFragment?
  fullName: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment?
  spec.csharp:
  - uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
    name: ConditionExpressionFragment
    href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.html
  - name: '?'
  spec.vb:
  - uid: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment
    name: ConditionExpressionFragment
    href: Ubytec.Language.Syntax.ExpressionFragments.ConditionExpressionFragment.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
memberLayout: SeparatePages
