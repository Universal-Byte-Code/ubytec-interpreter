name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    # ← Aquí generas el coverage
    - name: Test with coverage
      run: |
        dotnet test --no-build \
          --collect:"XPlat Code Coverage" \
          --results-directory TestResults

    # ← Ahora sí existe el XML que buscas
    - name: Find coverage report
      id: findcov
      run: |
        REPORT=$(find TestResults -type f -name 'coverage.cobertura.xml' | head -n1)
        echo "REPORT_PATH=$REPORT" >> $GITHUB_ENV

    - name: Install and execute Codacy Coverage Reporter
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: |
        # opcional: comprueba que REPORT_PATH no esté vacío
        if [ -z "$REPORT_PATH" ]; then
          echo "❌ No se encontró coverage.cobertura.xml en TestResults"
          exit 1
        fi
        bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
          -r "$REPORT_PATH"
